.CouponEditor {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    align-content: center;
    flex-direction: column;
    overflow-y: auto;
}

.Label {
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-size: 2vmin;
    margin-right: 1vmin;
}

.EditorLineItem {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    align-content: center;
    width: 100vmin;
    margin-top: 1vmin;
}

.EditorInput,
.DescriptionBox {
    background-color: antiquewhite;
    border: 0.3vmin solid rgb(165, 126, 42);
    border-radius: 1vmin;
    transition: 0.3s;
    font-size: 1vmin;
    text-align: center;
    height: 3vmin;
    width: 30vmin;
    font-size: 1.5vmin;
}

.EditorInput:hover,
.DescriptionBox:hover {
    transform: scale(1.10);
    border: 0.5vmin solid;
    border-color: #4fffe7;
}

.EditorInput:focus,
.DescriptionBox:focus {
    outline: none;
    border: 0.5vmin solid;
    border-color: rgba(0, 123, 255, 0.8);
}

.DescriptionBox {
    width: 80%;
    height: 10vmin;
}

.ImageBox {
    max-width: 20vmin;
    max-height: 20vmin;
    margin: auto;
}

.ImageBox img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
}

.checkbox {
    --borderColor: rgb(165, 126, 42);
    --borderWidth: 0.2vmin;
}

.checkbox input[type=checkbox] {
    -webkit-appearance: none;
    appearance: none;
    vertical-align: middle;
    background: antiquewhite;
    font-size: 2vmin;
    border-radius: 0.5vmin;
    display: inline-block;
    border: var(--borderWidth) solid var(--borderColor);
    width: 1em;
    height: 1em;
    position: relative;
}

.checkbox input[type=checkbox]:before,
.checkbox input[type=checkbox]:after {
    content: "";
    position: absolute;
    background: var(--borderColor);
    width: calc(var(--borderWidth) * 3);
    height: var(--borderWidth);
    top: 50%;
    left: 10%;
    transform-origin: left center;
}

.checkbox input[type=checkbox]:before {
    transform: rotate(45deg) translate(calc(var(--borderWidth) / -2), calc(var(--borderWidth) / -2)) scaleX(0);
    transition: transform 200ms ease-in 200ms;
}

.checkbox input[type=checkbox]:after {
    width: calc(var(--borderWidth) * 5);
    transform: rotate(-45deg) translateY(calc(var(--borderWidth) * 2)) scaleX(0);
    transform-origin: left center;
    transition: transform 200ms ease-in;
}

.checkbox input[type=checkbox]:checked:before {
    transform: rotate(45deg) translate(calc(var(--borderWidth) / -2), calc(var(--borderWidth) / -2)) scaleX(1);
    transition: transform 200ms ease-in;
}

.checkbox input[type=checkbox]:checked:after {
    width: calc(var(--borderWidth) * 5);
    transform: rotate(-45deg) translateY(calc(var(--borderWidth) * 2)) scaleX(1);
    transition: transform 200ms ease-out 200ms;
}

.checkbox input[type=checkbox]:focus {
    outline: calc(var(--borderWidth) / 2) dotted rgba(0, 0, 0, 0.25);
}

.SaveButton {
    background-color: rgb(223, 250, 215);
}

.DeleteButton {
    background-color: rgb(250, 215, 215);
}

.SaveButton,
.DeleteButton,
.ClearButton {
    border: 0.3vmin solid rgb(165, 126, 42);
    border-radius: 1vmin;
    transition: 0.3s;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-size: 1.5vmin;
    height: 4vh;
    width: 12vw;
    cursor: pointer;
    margin-left: 2vmin;
}

.SaveButton:hover,
.DeleteButton:hover,
.ClearButton:hover {
    background-color: rgb(128, 156, 198);
    transform: scale(1.10);
    border: 0.5vmin solid;
    border-color: #4fffe7;
}

.disabled-button {
    background-color: 0.3vmin #ccc;
    color: #888;
    cursor: not-allowed;
    width: 12vw;
    height: 4vh;
    margin-left: 2vmin;
    border-radius: 1vmin;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-size: 1.5vmin;
}

.ClearButton {
    background-color: rgb(215, 221, 250);
    display: flex;
    align-items: center;
    margin-top: 0.5vmin;
}

.ButtonContainer {
    display: flex;
    justify-content: center;
    margin-top: 1vmin;
}